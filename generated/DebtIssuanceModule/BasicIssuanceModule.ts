// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class SetTokenIssued extends ethereum.Event {
  get params(): SetTokenIssued__Params {
    return new SetTokenIssued__Params(this);
  }
}

export class SetTokenIssued__Params {
  _event: SetTokenIssued;

  constructor(event: SetTokenIssued) {
    this._event = event;
  }

  get _setToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _issuer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _hookContract(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _quantity(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class SetTokenRedeemed extends ethereum.Event {
  get params(): SetTokenRedeemed__Params {
    return new SetTokenRedeemed__Params(this);
  }
}

export class SetTokenRedeemed__Params {
  _event: SetTokenRedeemed;

  constructor(event: SetTokenRedeemed) {
    this._event = event;
  }

  get _setToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _redeemer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _quantity(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BasicIssuanceModule__getRequiredComponentUnitsForIssueResult {
  value0: Array<Address>;
  value1: Array<BigInt>;

  constructor(value0: Array<Address>, value1: Array<BigInt>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }
}

export class BasicIssuanceModule extends ethereum.SmartContract {
  static bind(address: Address): BasicIssuanceModule {
    return new BasicIssuanceModule("BasicIssuanceModule", address);
  }

  controller(): Address {
    let result = super.call("controller", "controller():(address)", []);

    return result[0].toAddress();
  }

  try_controller(): ethereum.CallResult<Address> {
    let result = super.tryCall("controller", "controller():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRequiredComponentUnitsForIssue(
    _setToken: Address,
    _quantity: BigInt
  ): BasicIssuanceModule__getRequiredComponentUnitsForIssueResult {
    let result = super.call(
      "getRequiredComponentUnitsForIssue",
      "getRequiredComponentUnitsForIssue(address,uint256):(address[],uint256[])",
      [
        ethereum.Value.fromAddress(_setToken),
        ethereum.Value.fromUnsignedBigInt(_quantity)
      ]
    );

    return new BasicIssuanceModule__getRequiredComponentUnitsForIssueResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray()
    );
  }

  try_getRequiredComponentUnitsForIssue(
    _setToken: Address,
    _quantity: BigInt
  ): ethereum.CallResult<
    BasicIssuanceModule__getRequiredComponentUnitsForIssueResult
  > {
    let result = super.tryCall(
      "getRequiredComponentUnitsForIssue",
      "getRequiredComponentUnitsForIssue(address,uint256):(address[],uint256[])",
      [
        ethereum.Value.fromAddress(_setToken),
        ethereum.Value.fromUnsignedBigInt(_quantity)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BasicIssuanceModule__getRequiredComponentUnitsForIssueResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray()
      )
    );
  }

  managerIssuanceHook(param0: Address): Address {
    let result = super.call(
      "managerIssuanceHook",
      "managerIssuanceHook(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toAddress();
  }

  try_managerIssuanceHook(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "managerIssuanceHook",
      "managerIssuanceHook(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _controller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _setToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _preIssueHook(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class IssueCall extends ethereum.Call {
  get inputs(): IssueCall__Inputs {
    return new IssueCall__Inputs(this);
  }

  get outputs(): IssueCall__Outputs {
    return new IssueCall__Outputs(this);
  }
}

export class IssueCall__Inputs {
  _call: IssueCall;

  constructor(call: IssueCall) {
    this._call = call;
  }

  get _setToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _quantity(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class IssueCall__Outputs {
  _call: IssueCall;

  constructor(call: IssueCall) {
    this._call = call;
  }
}

export class RedeemCall extends ethereum.Call {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get _setToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _quantity(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }
}

export class RemoveModuleCall extends ethereum.Call {
  get inputs(): RemoveModuleCall__Inputs {
    return new RemoveModuleCall__Inputs(this);
  }

  get outputs(): RemoveModuleCall__Outputs {
    return new RemoveModuleCall__Outputs(this);
  }
}

export class RemoveModuleCall__Inputs {
  _call: RemoveModuleCall;

  constructor(call: RemoveModuleCall) {
    this._call = call;
  }
}

export class RemoveModuleCall__Outputs {
  _call: RemoveModuleCall;

  constructor(call: RemoveModuleCall) {
    this._call = call;
  }
}
