// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ComponentAdded extends ethereum.Event {
  get params(): ComponentAdded__Params {
    return new ComponentAdded__Params(this);
  }
}

export class ComponentAdded__Params {
  _event: ComponentAdded;

  constructor(event: ComponentAdded) {
    this._event = event;
  }

  get _component(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ComponentRemoved extends ethereum.Event {
  get params(): ComponentRemoved__Params {
    return new ComponentRemoved__Params(this);
  }
}

export class ComponentRemoved__Params {
  _event: ComponentRemoved;

  constructor(event: ComponentRemoved) {
    this._event = event;
  }

  get _component(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DefaultPositionUnitEdited extends ethereum.Event {
  get params(): DefaultPositionUnitEdited__Params {
    return new DefaultPositionUnitEdited__Params(this);
  }
}

export class DefaultPositionUnitEdited__Params {
  _event: DefaultPositionUnitEdited;

  constructor(event: DefaultPositionUnitEdited) {
    this._event = event;
  }

  get _component(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _realUnit(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ExternalPositionDataEdited extends ethereum.Event {
  get params(): ExternalPositionDataEdited__Params {
    return new ExternalPositionDataEdited__Params(this);
  }
}

export class ExternalPositionDataEdited__Params {
  _event: ExternalPositionDataEdited;

  constructor(event: ExternalPositionDataEdited) {
    this._event = event;
  }

  get _component(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _positionModule(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _data(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class ExternalPositionUnitEdited extends ethereum.Event {
  get params(): ExternalPositionUnitEdited__Params {
    return new ExternalPositionUnitEdited__Params(this);
  }
}

export class ExternalPositionUnitEdited__Params {
  _event: ExternalPositionUnitEdited;

  constructor(event: ExternalPositionUnitEdited) {
    this._event = event;
  }

  get _component(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _positionModule(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _realUnit(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Invoked extends ethereum.Event {
  get params(): Invoked__Params {
    return new Invoked__Params(this);
  }
}

export class Invoked__Params {
  _event: Invoked;

  constructor(event: Invoked) {
    this._event = event;
  }

  get _target(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _data(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get _returnValue(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class ManagerEdited extends ethereum.Event {
  get params(): ManagerEdited__Params {
    return new ManagerEdited__Params(this);
  }
}

export class ManagerEdited__Params {
  _event: ManagerEdited;

  constructor(event: ManagerEdited) {
    this._event = event;
  }

  get _newManager(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _oldManager(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ModuleAdded extends ethereum.Event {
  get params(): ModuleAdded__Params {
    return new ModuleAdded__Params(this);
  }
}

export class ModuleAdded__Params {
  _event: ModuleAdded;

  constructor(event: ModuleAdded) {
    this._event = event;
  }

  get _module(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ModuleInitialized extends ethereum.Event {
  get params(): ModuleInitialized__Params {
    return new ModuleInitialized__Params(this);
  }
}

export class ModuleInitialized__Params {
  _event: ModuleInitialized;

  constructor(event: ModuleInitialized) {
    this._event = event;
  }

  get _module(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ModuleRemoved extends ethereum.Event {
  get params(): ModuleRemoved__Params {
    return new ModuleRemoved__Params(this);
  }
}

export class ModuleRemoved__Params {
  _event: ModuleRemoved;

  constructor(event: ModuleRemoved) {
    this._event = event;
  }

  get _module(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PendingModuleRemoved extends ethereum.Event {
  get params(): PendingModuleRemoved__Params {
    return new PendingModuleRemoved__Params(this);
  }
}

export class PendingModuleRemoved__Params {
  _event: PendingModuleRemoved;

  constructor(event: PendingModuleRemoved) {
    this._event = event;
  }

  get _module(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PositionModuleAdded extends ethereum.Event {
  get params(): PositionModuleAdded__Params {
    return new PositionModuleAdded__Params(this);
  }
}

export class PositionModuleAdded__Params {
  _event: PositionModuleAdded;

  constructor(event: PositionModuleAdded) {
    this._event = event;
  }

  get _component(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _positionModule(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PositionModuleRemoved extends ethereum.Event {
  get params(): PositionModuleRemoved__Params {
    return new PositionModuleRemoved__Params(this);
  }
}

export class PositionModuleRemoved__Params {
  _event: PositionModuleRemoved;

  constructor(event: PositionModuleRemoved) {
    this._event = event;
  }

  get _component(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _positionModule(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PositionMultiplierEdited extends ethereum.Event {
  get params(): PositionMultiplierEdited__Params {
    return new PositionMultiplierEdited__Params(this);
  }
}

export class PositionMultiplierEdited__Params {
  _event: PositionMultiplierEdited;

  constructor(event: PositionMultiplierEdited) {
    this._event = event;
  }

  get _newMultiplier(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetToken__getPositionsResultValue0Struct extends ethereum.Tuple {
  get component(): Address {
    return this[0].toAddress();
  }

  get module(): Address {
    return this[1].toAddress();
  }

  get unit(): BigInt {
    return this[2].toBigInt();
  }

  get positionState(): i32 {
    return this[3].toI32();
  }

  get data(): Bytes {
    return this[4].toBytes();
  }
}

export class SetToken extends ethereum.SmartContract {
  static bind(address: Address): SetToken {
    return new SetToken("SetToken", address);
  }

  allowance(owner: Address, spender: Address): BigInt {
    let result = super.call(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );

    return result[0].toBigInt();
  }

  try_allowance(owner: Address, spender: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  approve(spender: Address, amount: BigInt): boolean {
    let result = super.call("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBoolean();
  }

  try_approve(spender: Address, amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  balanceOf(account: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  components(param0: BigInt): Address {
    let result = super.call("components", "components(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_components(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("components", "components(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  controller(): Address {
    let result = super.call("controller", "controller():(address)", []);

    return result[0].toAddress();
  }

  try_controller(): ethereum.CallResult<Address> {
    let result = super.tryCall("controller", "controller():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  decimals(): i32 {
    let result = super.call("decimals", "decimals():(uint8)", []);

    return result[0].toI32();
  }

  try_decimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("decimals", "decimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  decreaseAllowance(spender: Address, subtractedValue: BigInt): boolean {
    let result = super.call(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(subtractedValue)
      ]
    );

    return result[0].toBoolean();
  }

  try_decreaseAllowance(
    spender: Address,
    subtractedValue: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(subtractedValue)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getComponents(): Array<Address> {
    let result = super.call("getComponents", "getComponents():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getComponents(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getComponents",
      "getComponents():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getDefaultPositionRealUnit(_component: Address): BigInt {
    let result = super.call(
      "getDefaultPositionRealUnit",
      "getDefaultPositionRealUnit(address):(int256)",
      [ethereum.Value.fromAddress(_component)]
    );

    return result[0].toBigInt();
  }

  try_getDefaultPositionRealUnit(
    _component: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getDefaultPositionRealUnit",
      "getDefaultPositionRealUnit(address):(int256)",
      [ethereum.Value.fromAddress(_component)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getExternalPositionData(
    _component: Address,
    _positionModule: Address
  ): Bytes {
    let result = super.call(
      "getExternalPositionData",
      "getExternalPositionData(address,address):(bytes)",
      [
        ethereum.Value.fromAddress(_component),
        ethereum.Value.fromAddress(_positionModule)
      ]
    );

    return result[0].toBytes();
  }

  try_getExternalPositionData(
    _component: Address,
    _positionModule: Address
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getExternalPositionData",
      "getExternalPositionData(address,address):(bytes)",
      [
        ethereum.Value.fromAddress(_component),
        ethereum.Value.fromAddress(_positionModule)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getExternalPositionModules(_component: Address): Array<Address> {
    let result = super.call(
      "getExternalPositionModules",
      "getExternalPositionModules(address):(address[])",
      [ethereum.Value.fromAddress(_component)]
    );

    return result[0].toAddressArray();
  }

  try_getExternalPositionModules(
    _component: Address
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getExternalPositionModules",
      "getExternalPositionModules(address):(address[])",
      [ethereum.Value.fromAddress(_component)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getExternalPositionRealUnit(
    _component: Address,
    _positionModule: Address
  ): BigInt {
    let result = super.call(
      "getExternalPositionRealUnit",
      "getExternalPositionRealUnit(address,address):(int256)",
      [
        ethereum.Value.fromAddress(_component),
        ethereum.Value.fromAddress(_positionModule)
      ]
    );

    return result[0].toBigInt();
  }

  try_getExternalPositionRealUnit(
    _component: Address,
    _positionModule: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getExternalPositionRealUnit",
      "getExternalPositionRealUnit(address,address):(int256)",
      [
        ethereum.Value.fromAddress(_component),
        ethereum.Value.fromAddress(_positionModule)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getModules(): Array<Address> {
    let result = super.call("getModules", "getModules():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getModules(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getModules", "getModules():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getPositions(): Array<SetToken__getPositionsResultValue0Struct> {
    let result = super.call(
      "getPositions",
      "getPositions():((address,address,int256,uint8,bytes)[])",
      []
    );

    return result[0].toTupleArray<SetToken__getPositionsResultValue0Struct>();
  }

  try_getPositions(): ethereum.CallResult<
    Array<SetToken__getPositionsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getPositions",
      "getPositions():((address,address,int256,uint8,bytes)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<SetToken__getPositionsResultValue0Struct>()
    );
  }

  getTotalComponentRealUnits(_component: Address): BigInt {
    let result = super.call(
      "getTotalComponentRealUnits",
      "getTotalComponentRealUnits(address):(int256)",
      [ethereum.Value.fromAddress(_component)]
    );

    return result[0].toBigInt();
  }

  try_getTotalComponentRealUnits(
    _component: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTotalComponentRealUnits",
      "getTotalComponentRealUnits(address):(int256)",
      [ethereum.Value.fromAddress(_component)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  increaseAllowance(spender: Address, addedValue: BigInt): boolean {
    let result = super.call(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(addedValue)
      ]
    );

    return result[0].toBoolean();
  }

  try_increaseAllowance(
    spender: Address,
    addedValue: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(addedValue)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  invoke(_target: Address, _value: BigInt, _data: Bytes): Bytes {
    let result = super.call("invoke", "invoke(address,uint256,bytes):(bytes)", [
      ethereum.Value.fromAddress(_target),
      ethereum.Value.fromUnsignedBigInt(_value),
      ethereum.Value.fromBytes(_data)
    ]);

    return result[0].toBytes();
  }

  try_invoke(
    _target: Address,
    _value: BigInt,
    _data: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "invoke",
      "invoke(address,uint256,bytes):(bytes)",
      [
        ethereum.Value.fromAddress(_target),
        ethereum.Value.fromUnsignedBigInt(_value),
        ethereum.Value.fromBytes(_data)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  isComponent(_component: Address): boolean {
    let result = super.call("isComponent", "isComponent(address):(bool)", [
      ethereum.Value.fromAddress(_component)
    ]);

    return result[0].toBoolean();
  }

  try_isComponent(_component: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isComponent", "isComponent(address):(bool)", [
      ethereum.Value.fromAddress(_component)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isExternalPositionModule(_component: Address, _module: Address): boolean {
    let result = super.call(
      "isExternalPositionModule",
      "isExternalPositionModule(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_component),
        ethereum.Value.fromAddress(_module)
      ]
    );

    return result[0].toBoolean();
  }

  try_isExternalPositionModule(
    _component: Address,
    _module: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isExternalPositionModule",
      "isExternalPositionModule(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_component),
        ethereum.Value.fromAddress(_module)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isInitializedModule(_module: Address): boolean {
    let result = super.call(
      "isInitializedModule",
      "isInitializedModule(address):(bool)",
      [ethereum.Value.fromAddress(_module)]
    );

    return result[0].toBoolean();
  }

  try_isInitializedModule(_module: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isInitializedModule",
      "isInitializedModule(address):(bool)",
      [ethereum.Value.fromAddress(_module)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isLocked(): boolean {
    let result = super.call("isLocked", "isLocked():(bool)", []);

    return result[0].toBoolean();
  }

  try_isLocked(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isLocked", "isLocked():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPendingModule(_module: Address): boolean {
    let result = super.call(
      "isPendingModule",
      "isPendingModule(address):(bool)",
      [ethereum.Value.fromAddress(_module)]
    );

    return result[0].toBoolean();
  }

  try_isPendingModule(_module: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isPendingModule",
      "isPendingModule(address):(bool)",
      [ethereum.Value.fromAddress(_module)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  locker(): Address {
    let result = super.call("locker", "locker():(address)", []);

    return result[0].toAddress();
  }

  try_locker(): ethereum.CallResult<Address> {
    let result = super.tryCall("locker", "locker():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  manager(): Address {
    let result = super.call("manager", "manager():(address)", []);

    return result[0].toAddress();
  }

  try_manager(): ethereum.CallResult<Address> {
    let result = super.tryCall("manager", "manager():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  moduleStates(param0: Address): i32 {
    let result = super.call("moduleStates", "moduleStates(address):(uint8)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toI32();
  }

  try_moduleStates(param0: Address): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "moduleStates",
      "moduleStates(address):(uint8)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  modules(param0: BigInt): Address {
    let result = super.call("modules", "modules(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_modules(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("modules", "modules(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  positionMultiplier(): BigInt {
    let result = super.call(
      "positionMultiplier",
      "positionMultiplier():(int256)",
      []
    );

    return result[0].toBigInt();
  }

  try_positionMultiplier(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "positionMultiplier",
      "positionMultiplier():(int256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transfer(recipient: Address, amount: BigInt): boolean {
    let result = super.call("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(recipient),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBoolean();
  }

  try_transfer(
    recipient: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(recipient),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transferFrom(sender: Address, recipient: Address, amount: BigInt): boolean {
    let result = super.call(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(sender),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_transferFrom(
    sender: Address,
    recipient: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(sender),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _components(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _units(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _modules(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get _controller(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _manager(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _name(): string {
    return this._call.inputValues[5].value.toString();
  }

  get _symbol(): string {
    return this._call.inputValues[6].value.toString();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddComponentCall extends ethereum.Call {
  get inputs(): AddComponentCall__Inputs {
    return new AddComponentCall__Inputs(this);
  }

  get outputs(): AddComponentCall__Outputs {
    return new AddComponentCall__Outputs(this);
  }
}

export class AddComponentCall__Inputs {
  _call: AddComponentCall;

  constructor(call: AddComponentCall) {
    this._call = call;
  }

  get _component(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddComponentCall__Outputs {
  _call: AddComponentCall;

  constructor(call: AddComponentCall) {
    this._call = call;
  }
}

export class AddExternalPositionModuleCall extends ethereum.Call {
  get inputs(): AddExternalPositionModuleCall__Inputs {
    return new AddExternalPositionModuleCall__Inputs(this);
  }

  get outputs(): AddExternalPositionModuleCall__Outputs {
    return new AddExternalPositionModuleCall__Outputs(this);
  }
}

export class AddExternalPositionModuleCall__Inputs {
  _call: AddExternalPositionModuleCall;

  constructor(call: AddExternalPositionModuleCall) {
    this._call = call;
  }

  get _component(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _positionModule(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddExternalPositionModuleCall__Outputs {
  _call: AddExternalPositionModuleCall;

  constructor(call: AddExternalPositionModuleCall) {
    this._call = call;
  }
}

export class AddModuleCall extends ethereum.Call {
  get inputs(): AddModuleCall__Inputs {
    return new AddModuleCall__Inputs(this);
  }

  get outputs(): AddModuleCall__Outputs {
    return new AddModuleCall__Outputs(this);
  }
}

export class AddModuleCall__Inputs {
  _call: AddModuleCall;

  constructor(call: AddModuleCall) {
    this._call = call;
  }

  get _module(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddModuleCall__Outputs {
  _call: AddModuleCall;

  constructor(call: AddModuleCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class BurnCall extends ethereum.Call {
  get inputs(): BurnCall__Inputs {
    return new BurnCall__Inputs(this);
  }

  get outputs(): BurnCall__Outputs {
    return new BurnCall__Outputs(this);
  }
}

export class BurnCall__Inputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _quantity(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BurnCall__Outputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }
}

export class DecreaseAllowanceCall extends ethereum.Call {
  get inputs(): DecreaseAllowanceCall__Inputs {
    return new DecreaseAllowanceCall__Inputs(this);
  }

  get outputs(): DecreaseAllowanceCall__Outputs {
    return new DecreaseAllowanceCall__Outputs(this);
  }
}

export class DecreaseAllowanceCall__Inputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get subtractedValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DecreaseAllowanceCall__Outputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class EditDefaultPositionUnitCall extends ethereum.Call {
  get inputs(): EditDefaultPositionUnitCall__Inputs {
    return new EditDefaultPositionUnitCall__Inputs(this);
  }

  get outputs(): EditDefaultPositionUnitCall__Outputs {
    return new EditDefaultPositionUnitCall__Outputs(this);
  }
}

export class EditDefaultPositionUnitCall__Inputs {
  _call: EditDefaultPositionUnitCall;

  constructor(call: EditDefaultPositionUnitCall) {
    this._call = call;
  }

  get _component(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _realUnit(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class EditDefaultPositionUnitCall__Outputs {
  _call: EditDefaultPositionUnitCall;

  constructor(call: EditDefaultPositionUnitCall) {
    this._call = call;
  }
}

export class EditExternalPositionDataCall extends ethereum.Call {
  get inputs(): EditExternalPositionDataCall__Inputs {
    return new EditExternalPositionDataCall__Inputs(this);
  }

  get outputs(): EditExternalPositionDataCall__Outputs {
    return new EditExternalPositionDataCall__Outputs(this);
  }
}

export class EditExternalPositionDataCall__Inputs {
  _call: EditExternalPositionDataCall;

  constructor(call: EditExternalPositionDataCall) {
    this._call = call;
  }

  get _component(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _positionModule(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class EditExternalPositionDataCall__Outputs {
  _call: EditExternalPositionDataCall;

  constructor(call: EditExternalPositionDataCall) {
    this._call = call;
  }
}

export class EditExternalPositionUnitCall extends ethereum.Call {
  get inputs(): EditExternalPositionUnitCall__Inputs {
    return new EditExternalPositionUnitCall__Inputs(this);
  }

  get outputs(): EditExternalPositionUnitCall__Outputs {
    return new EditExternalPositionUnitCall__Outputs(this);
  }
}

export class EditExternalPositionUnitCall__Inputs {
  _call: EditExternalPositionUnitCall;

  constructor(call: EditExternalPositionUnitCall) {
    this._call = call;
  }

  get _component(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _positionModule(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _realUnit(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class EditExternalPositionUnitCall__Outputs {
  _call: EditExternalPositionUnitCall;

  constructor(call: EditExternalPositionUnitCall) {
    this._call = call;
  }
}

export class EditPositionMultiplierCall extends ethereum.Call {
  get inputs(): EditPositionMultiplierCall__Inputs {
    return new EditPositionMultiplierCall__Inputs(this);
  }

  get outputs(): EditPositionMultiplierCall__Outputs {
    return new EditPositionMultiplierCall__Outputs(this);
  }
}

export class EditPositionMultiplierCall__Inputs {
  _call: EditPositionMultiplierCall;

  constructor(call: EditPositionMultiplierCall) {
    this._call = call;
  }

  get _newMultiplier(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class EditPositionMultiplierCall__Outputs {
  _call: EditPositionMultiplierCall;

  constructor(call: EditPositionMultiplierCall) {
    this._call = call;
  }
}

export class IncreaseAllowanceCall extends ethereum.Call {
  get inputs(): IncreaseAllowanceCall__Inputs {
    return new IncreaseAllowanceCall__Inputs(this);
  }

  get outputs(): IncreaseAllowanceCall__Outputs {
    return new IncreaseAllowanceCall__Outputs(this);
  }
}

export class IncreaseAllowanceCall__Inputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get addedValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseAllowanceCall__Outputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class InitializeModuleCall extends ethereum.Call {
  get inputs(): InitializeModuleCall__Inputs {
    return new InitializeModuleCall__Inputs(this);
  }

  get outputs(): InitializeModuleCall__Outputs {
    return new InitializeModuleCall__Outputs(this);
  }
}

export class InitializeModuleCall__Inputs {
  _call: InitializeModuleCall;

  constructor(call: InitializeModuleCall) {
    this._call = call;
  }
}

export class InitializeModuleCall__Outputs {
  _call: InitializeModuleCall;

  constructor(call: InitializeModuleCall) {
    this._call = call;
  }
}

export class InvokeCall extends ethereum.Call {
  get inputs(): InvokeCall__Inputs {
    return new InvokeCall__Inputs(this);
  }

  get outputs(): InvokeCall__Outputs {
    return new InvokeCall__Outputs(this);
  }
}

export class InvokeCall__Inputs {
  _call: InvokeCall;

  constructor(call: InvokeCall) {
    this._call = call;
  }

  get _target(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class InvokeCall__Outputs {
  _call: InvokeCall;

  constructor(call: InvokeCall) {
    this._call = call;
  }

  get _returnValue(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class LockCall extends ethereum.Call {
  get inputs(): LockCall__Inputs {
    return new LockCall__Inputs(this);
  }

  get outputs(): LockCall__Outputs {
    return new LockCall__Outputs(this);
  }
}

export class LockCall__Inputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }
}

export class LockCall__Outputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _quantity(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }
}

export class RemoveComponentCall extends ethereum.Call {
  get inputs(): RemoveComponentCall__Inputs {
    return new RemoveComponentCall__Inputs(this);
  }

  get outputs(): RemoveComponentCall__Outputs {
    return new RemoveComponentCall__Outputs(this);
  }
}

export class RemoveComponentCall__Inputs {
  _call: RemoveComponentCall;

  constructor(call: RemoveComponentCall) {
    this._call = call;
  }

  get _component(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveComponentCall__Outputs {
  _call: RemoveComponentCall;

  constructor(call: RemoveComponentCall) {
    this._call = call;
  }
}

export class RemoveExternalPositionModuleCall extends ethereum.Call {
  get inputs(): RemoveExternalPositionModuleCall__Inputs {
    return new RemoveExternalPositionModuleCall__Inputs(this);
  }

  get outputs(): RemoveExternalPositionModuleCall__Outputs {
    return new RemoveExternalPositionModuleCall__Outputs(this);
  }
}

export class RemoveExternalPositionModuleCall__Inputs {
  _call: RemoveExternalPositionModuleCall;

  constructor(call: RemoveExternalPositionModuleCall) {
    this._call = call;
  }

  get _component(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _positionModule(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveExternalPositionModuleCall__Outputs {
  _call: RemoveExternalPositionModuleCall;

  constructor(call: RemoveExternalPositionModuleCall) {
    this._call = call;
  }
}

export class RemoveModuleCall extends ethereum.Call {
  get inputs(): RemoveModuleCall__Inputs {
    return new RemoveModuleCall__Inputs(this);
  }

  get outputs(): RemoveModuleCall__Outputs {
    return new RemoveModuleCall__Outputs(this);
  }
}

export class RemoveModuleCall__Inputs {
  _call: RemoveModuleCall;

  constructor(call: RemoveModuleCall) {
    this._call = call;
  }

  get _module(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveModuleCall__Outputs {
  _call: RemoveModuleCall;

  constructor(call: RemoveModuleCall) {
    this._call = call;
  }
}

export class RemovePendingModuleCall extends ethereum.Call {
  get inputs(): RemovePendingModuleCall__Inputs {
    return new RemovePendingModuleCall__Inputs(this);
  }

  get outputs(): RemovePendingModuleCall__Outputs {
    return new RemovePendingModuleCall__Outputs(this);
  }
}

export class RemovePendingModuleCall__Inputs {
  _call: RemovePendingModuleCall;

  constructor(call: RemovePendingModuleCall) {
    this._call = call;
  }

  get _module(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemovePendingModuleCall__Outputs {
  _call: RemovePendingModuleCall;

  constructor(call: RemovePendingModuleCall) {
    this._call = call;
  }
}

export class SetManagerCall extends ethereum.Call {
  get inputs(): SetManagerCall__Inputs {
    return new SetManagerCall__Inputs(this);
  }

  get outputs(): SetManagerCall__Outputs {
    return new SetManagerCall__Outputs(this);
  }
}

export class SetManagerCall__Inputs {
  _call: SetManagerCall;

  constructor(call: SetManagerCall) {
    this._call = call;
  }

  get _manager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetManagerCall__Outputs {
  _call: SetManagerCall;

  constructor(call: SetManagerCall) {
    this._call = call;
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class UnlockCall extends ethereum.Call {
  get inputs(): UnlockCall__Inputs {
    return new UnlockCall__Inputs(this);
  }

  get outputs(): UnlockCall__Outputs {
    return new UnlockCall__Outputs(this);
  }
}

export class UnlockCall__Inputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }
}

export class UnlockCall__Outputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }
}
